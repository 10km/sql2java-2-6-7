#parse( "header.include.vm" )
#parse( "schema.include.vm" )
#set($gpkg = $codewriter.getProperty('general.package') )
$codewriter.setCurrentJavaFilename($gpkg, "IDbConverter.java")
package $gpkg;

#foreach ( $table in $tables )
import ${table.getPackage()}.${table.asBeanClass()};
#end

/**
 * converter between general type({@code <L>}) and native type ({@code <R>}) for  all Beans
 * @author guyadong
 *
 */
public interface IDbConverter {
#foreach ( $table in $tables )
    public abstract IBeanConverter<${table.asBeanClassNSP()}, ${table.asBeanClass()}> get${table.asBeanClassNSP()}Converter();
#end

    /**
     * @param <L> general type
     * @param <R> native type
     * @param lClass
     * @param rClass
     * @return
     */
    public abstract<L, R> IBeanConverter<L,R> getBeanConverter(Class<L> lClass,Class<R> rClass);
    /**
     * @param <L> general type
     * @param <R> native type
     * @param lClass
     * @param rClass
     * @param converter
     */
    public abstract <L, R> void setBeanConverter(Class<L> lClass, Class<R> rClass, IBeanConverter<L,R>converter);

}