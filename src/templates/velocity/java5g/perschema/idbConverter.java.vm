#parse( "header.include.vm" )
#parse( "schema.include.vm" )
#set($npkg = $codewriter.getProperty('general.package') )
$codewriter.setCurrentJavaFilename($npkg, "IDbConverter.java")
package $npkg;

#foreach ( $table in $tables )
import ${table.getPackage()}.${table.asBeanClass()}Base;
#end

public interface IDbConverter {
#foreach ( $table in $tables )
    public abstract IBeanConverter<${table.asBeanClassNSP()}, ${table.asBeanClass()}Base> get${table.asBeanClassNSP()}Converter();
#end

    /**
     * @param <G> general type
     * @param <N> native type
     * @param gClass
     * @param nClass
     * @return
     */
    public abstract<G extends BaseBean, N> IBeanConverter<G,N> getBeanConverter(Class<G> gClass,Class<N> nClass);
    /**
     * @param <G> general type
     * @param <N> native type
     * @param gClass
     * @param nClass
     * @param converter
     */
    public abstract <G extends BaseBean, N> void setBeanConverter(Class<G> gClass, Class<N> nClass, IBeanConverter<G,N>converter);

}