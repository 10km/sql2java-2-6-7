#set ( $ext_template = "")
#if($codewriter.existsInDependencyPackage($beanClass))
#set ( $thriftClass = "${codewriter.getDependencyPackage()}.${beanClass}" )
    /////// FOR THRIFT //////
    /** 
     * cast {@code this} to {@link $thriftClass}
     * @see ThriftConverter#converter${beanClass}
     */
    public $thriftClass toThrift(){
        return ThriftConverter.${table.asConverterConstVar()}.toRight(this);
    }
    /** 
     * copy all fields from {@link $thriftClass},do nothing if {@code thriftBean} is null
     * @return current object {@code this}
     * @see ThriftConverter#converter${beanClass}
     */
    public $beanClass fromThrift($thriftClass thriftBean){
        if(null != thriftBean){
            reset();
            return ThriftConverter.${table.asConverterConstVar()}.fromRight(this,thriftBean);
        }
        return this;
    }
    /** 
     * construct new instance from {@link $thriftClass}
     * @param thriftBean must not be null
     * @see ThriftConverter#converter${beanClass}
     */
    public $beanClass($thriftClass thriftBean){
        if(null != thriftBean){
            throw new NullPointerException();
        }
        reset();
        ThriftConverter.${table.asConverterConstVar()}.fromRight(this,thriftBean);
    }
#end