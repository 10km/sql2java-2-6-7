##$Id: tablelistener.java.vm,v 1.3 2007/11/12 14:06:30 kameleono Exp $
#parse( "header.include.vm" )
$codewriter.setCurrentJavaFilename($pkg, "TableListener.java")
package $pkg;
import ${pkg}.exception.DAOException;

/**
 * Listener that is notified of table changes.
 * @author guyadong
 */
public interface TableListener<B>{
    /**
     * This adapter class provides default implementations for the
     * methods declared by the {@link TableListener} interface.<br>
     * 
     * @author guyadong
     */
    public static class Adapter<B> implements TableListener<B>{

        @Override
        public void beforeInsert(B bean) throws DAOException {}

        @Override
        public void afterInsert(B bean) throws DAOException {}

        @Override
        public void beforeUpdate(B bean) throws DAOException {}

        @Override
        public void afterUpdate(B bean) throws DAOException {}

        @Override
        public void beforeDelete(B bean) throws DAOException {}

        @Override
        public void afterDelete(B bean) throws DAOException {}
    }
    /**
     * Invoked just before inserting a B record into the database.
     *
     * @param bean the B that is about to be inserted
     */
    public void beforeInsert(B bean) throws DAOException;


    /**
     * Invoked just after a B record is inserted in the database.
     *
     * @param bean the B that was just inserted
     */
    public void afterInsert(B bean) throws DAOException;


    /**
     * Invoked just before updating a B record in the database.
     *
     * @param bean the B that is about to be updated
     */
    public void beforeUpdate(B bean) throws DAOException;


    /**
     * Invoked just after updating a B record in the database.
     *
     * @param bean the B that was just updated
     */
    public void afterUpdate(B bean) throws DAOException;


    /**
     * Invoked just before deleting a B record in the database.
     *
     * @param bean the B that is about to be deleted
     */
    public void beforeDelete(B bean) throws DAOException;


    /**
     * Invoked just after deleting a B record in the database.
     *
     * @param bean the B that was just deleted
     */
    public void afterDelete(B bean) throws DAOException;
}

