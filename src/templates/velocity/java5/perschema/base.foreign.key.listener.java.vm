#parse( "schema.include.vm" )
#parse( "header.include.vm" )
$codewriter.setCurrentJavaFilename($schemaPkg, "BaseForeignKeyListener.java")
package $schemaPkg;

import java.util.List;
import ${exceptionPkg}.DAOException;

/**
 * abstract implementation of foreign key listener for DEELTE RULE
 * @author guyadong
 *
 * @param <FB> bean for foreign table 
 * @param <B> bean for self table
 */
public abstract class BaseForeignKeyListener<FB extends BaseBean<FB>,B extends BaseBean<B>> extends TableListener.Adapter<FB>{
    protected BaseForeignKeyListener(){}
    /**
     * Retrieves the imported B beans that reference to FB bean <BR>
     * @param fb foreign table bean
     * @return
     * @throws DAOException
     */
    protected abstract List<B> getImportedBeans(FB fb) throws DAOException;
    /**
     * do something on foreign table row removed for effected imported beans {@code effectBeans}
     * @param effectBeans effected imported beans
     * @throws DAOException
     */
    protected abstract void onRemove(List<B> effectBeans) throws DAOException;
    protected final InheritableThreadLocal<List<B>> importedBeans = new InheritableThreadLocal<List<B>>();
    @Override
    public void beforeDelete(FB bean) throws DAOException{
        this.importedBeans.set(getImportedBeans(bean));
    }

    @Override
    public void afterDelete(FB bean) throws DAOException{
        try{
            List<B> beans = this.importedBeans.get();
            if(null != beans){
                onRemove(beans);
            }
        }finally{
            importedBeans.set(null);
        }
    }
}

